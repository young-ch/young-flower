{"remainingRequest":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/src/apps/user/Users.vue?vue&type=style&index=1&id=552caf18&lang=scss&scoped=true&","dependencies":[{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/src/apps/user/Users.vue","mtime":1666058837203},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/css-loader/dist/cjs.js","mtime":1665531751068},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1665531752098},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/postcss-loader/src/index.js","mtime":1665531751243},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/sass-loader/dist/cjs.js","mtime":1665531751056},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/cache-loader/dist/cjs.js","mtime":1665531750829},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/vue-loader/lib/index.js","mtime":1665531752006}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci52LWRhdGEtdGFibGUgewogIDo6di1kZWVwIHRhYmxlIHsKICAgIHRoIHsKICAgICAgdGV4dC10cmFuc2Zvcm06IG5vbmUgIWltcG9ydGFudDsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Users.vue"],"names":[],"mappings":";AAyVA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"src/apps/user","sourcesContent":["<template>\n  <div class=\"d-flex flex-column flex-grow-1\">\n    <div class=\"d-flex align-center py-3\">\n      <div>\n        <div class=\"display-1\">{{ this.pageName }} 관리</div>\n        <v-breadcrumbs :items=\"breadcrumbs\" class=\"pa-0 py-2\"></v-breadcrumbs>\n      </div>\n      <v-spacer></v-spacer>\n      <v-btn color=\"primary\" @click=\"$router.push({path:'/users/form'})\" v-if=\"this.$route.params.searchState !== 'STATE_WITHDRAW'\">\n        <v-icon left>mdi mdi-playlist-plus</v-icon>\n        {{ pageName }} 추가\n      </v-btn>\n    </div>\n\n    <v-card>\n      <!-- users list -->\n      <v-row dense class=\"pa-2 align-center\">\n\n        <v-col cols=\"6\">\n        </v-col>\n\n        <v-col cols=\"6\" class=\"d-flex text-right align-center\">\n          <v-text-field\n            v-model=\"searchKeyword\"\n            append-icon=\"mdi-magnify\"\n            class=\"flex-grow-1 mr-md-2\"\n            hide-details\n            dense\n            clearable\n            single-line\n            label=\"검색\"\n            @click:append=\"getUsers\"\n            @keyup.enter=\"getUsers\"\n          ></v-text-field>\n<!--          <v-btn-->\n<!--            :loading=\"isLoading\"-->\n<!--            icon-->\n<!--            small-->\n<!--            class=\"ml-2\"-->\n<!--            @click=\"reloadSearch\"-->\n<!--          >-->\n<!--            <v-icon>mdi-refresh</v-icon>-->\n<!--          </v-btn>-->\n        </v-col>\n\n      </v-row>\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"users\"\n        class=\"flex-grow-1\"\n        :server-items-length=\"totalItems\"\n        :options.sync=\"options\"\n        item-key=\"id\"\n        :footer-props=\"{showFirstLastPage: true, 'items-per-page-options' : [5,10,20,50,100], showCurrentPage:true}\"\n        disable-sort\n        :loading=\"loading\"\n      >\n        <!--        <template v-slot:item.userId=\"{ item }\">-->\n        <!--          <div class=\"font-weight-bold\"># <copy-label :text=\"item.userId + ''\" /></div>-->\n        <!--        </template>-->\n        <template v-slot:item.no=\"{ index }\">\n          {{totalItems - ((options.page-1) * (options.itemsPerPage === -1 ? 0 : options.itemsPerPage)) - index}}\n        </template>\n\n        <template v-slot:item.systemId=\"{ value }\">\n          <div>\n            {{ systemName(value) }}\n          </div>\n        </template>\n\n        <template v-slot:item.loginId=\"{ item }\">\n          <div>\n            <router-link :to=\"{path:`/users/${item.id}/form`}\">{{item.loginId}}</router-link>\n          </div>\n        </template>\n\n        <template v-slot:item.mobileNo=\"{ value }\">\n          <div class=\"d-flex align-center py-1\">\n            <div class=\"ml-1 caption font-weight-bold\">\n              <copy-label :text=\"value\" />\n            </div>\n          </div>\n        </template>\n\n        <template v-slot:item.email=\"{ item }\">\n          <div class=\"d-flex align-center py-1\">\n            <!--            <v-avatar size=\"32\" class=\"elevation-1 grey lighten-3\">-->\n            <!--              <v-img :src=\"item.avatar\" />-->\n            <!--            </v-avatar>-->\n            <div class=\"ml-1 caption font-weight-bold\">\n<!--              <router-link :to=\"{path:`/users/detail/${item.id}`}\">{{item.email}}</router-link>-->\n                  <copy-label :text=\"item.email\" />\n            </div>\n          </div>\n        </template>\n\n        <!--        <template v-slot:item.verified=\"{ item }\">-->\n        <!--          <v-icon v-if=\"item.verified\" small color=\"success\">-->\n        <!--            mdi-check-circle-->\n        <!--          </v-icon>-->\n        <!--          <v-icon v-else small>-->\n        <!--            mdi-circle-outline-->\n        <!--          </v-icon>-->\n        <!--        </template>-->\n\n        <!--        <template v-slot:item.disabled=\"{ item }\">-->\n        <!--          <div>{{ item.disabled.toString() | capitalize }}</div>-->\n        <!--        </template>-->\n\n        <!--        <template v-slot:item.role=\"{ item }\">-->\n        <!--          <v-chip-->\n        <!--            label-->\n        <!--            small-->\n        <!--            class=\"font-weight-bold\"-->\n        <!--            :color=\"item.role === 'ADMIN' ? 'primary' : undefined\"-->\n        <!--          >{{ item.role | capitalize }}</v-chip>-->\n        <!--        </template>-->\n\n        <template v-slot:item.createdAt=\"{ value }\">\n          <div>{{ value | formatDate('YYYY-MM-DD') }}</div>\n        </template>\n        <template v-slot:item.loginAt=\"{ value }\">\n          <div>{{ value | formatDate('YYYY-MM-DD HH:mm:ss') }}</div>\n        </template>\n\n        <template v-slot:item.state=\"{ value }\">\n          <div>{{ stateName(value) }}</div>\n        </template>\n\n               <!-- <template v-slot:item.lastSignIn=\"{ item }\">\n                 <div>{{ item.lastSignIn | formatDate('lll') }}</div>\n               </template>\n\n               <template v-slot:item.action=\"{ }\">\n                 <div class=\"actions\">\n                   <v-btn icon to=\"/users/edit\">\n                     <v-icon>mdi-open-in-new</v-icon>\n                   </v-btn>\n                 </div>\n               </template> -->\n        <!--        -->\n        <template #footer.page-text=\"props\">\n\n          <v-combobox\n            v-model=\"options.page\"\n            :label=\"`${props.pageStart}-${props.pageStop} of ${props.itemsLength} rows / ${options.page} page / total ${Math.ceil(props.itemsLength / options.itemsPerPage)} pages`\"\n            :items=\"Array.from({length: Math.ceil(props.itemsLength / options.itemsPerPage)}, (v, k) => k+1 )\"\n            :return-object=\"false\"\n            hide-details dense\n            type=\"number\"\n            suffix=\"page\"\n          >\n          </v-combobox>\n        </template>\n      </v-data-table>\n    </v-card>\n\n    <div class=\"d-flex align-center py-3\">\n      <v-spacer></v-spacer>\n      <v-btn color=\"primary\" @click=\"$router.push({path:'/users/form'})\" v-if=\"this.$route.params.searchState !== 'STATE_WITHDRAW'\">\n        <v-icon left>mdi mdi-playlist-plus</v-icon>\n        {{ pageName }} 추가\n      </v-btn>\n    </div>\n  </div>\n</template>\n\n<script>\n// import users from './content/users'\n\nimport UserApi from \"../../api/UserApi\"\nimport config from \"@/configs\";\nimport CopyLabel from '@/components/common/CopyLabel'\nimport _ from 'lodash'\n\nexport default {\n  name:'users',\n  components: {\n    CopyLabel\n  },\n  // props: ['id'],\n  data() {\n    return {\n      isLoading: false,\n      states:config.meta.user.state,\n      systems:config.meta.systems,\n      breadcrumbs: [{\n        text: '회원 관리',\n        disabled: false,\n        href: '#'\n      }, {\n        text: '회원 목록'\n      }],\n      pageName: '회원',\n      searchKeyword: '',\n      waitingSearch: false,\n      loading: true,\n      selectedUsers: [],\n      headers: [\n        { text: 'No.', align: 'left', value: 'no' },\n        { text: '아이디', align: 'left', value: 'id' },\n        { text: '로그인아이디', value: 'loginId' },\n        { text: '이름', align: 'left', value: 'name' },\n        // { text: '닉네임', align: 'left', value: 'nickname' },\n        { text: '연락처', value: 'mobileNo' },\n        { text: 'Email', value: 'email' },\n        { text: '생년월일', align: 'left', value: 'birthDate' },\n        { text: '가입일', value: 'createdAt' },\n        { text: '최근접속일시', value: 'loginAt' },\n        { text: '접속수', value: 'loginCount' },\n        { text: '상태', value: 'state' },\n        { text: '', sortable: false, align: 'right', value: 'action' }\n      ],\n      options:{},\n      totalItems: 0,\n      users: [],\n      isFirstLoad: true\n    }\n  },\n  watch: {\n    options: {\n      handler() {\n        this.getUsers();\n      },\n      deep: true,\n    },\n    searchKeyword: {\n      handler(v) {\n        if (!this.waitingSearch) {\n          setTimeout(() => {\n            // this.getUsers();\n            if(this.options.searchKeyword !== v)\n              this.options.searchKeyword = v\n\n            this.waitingSearch = false\n          }, 800); // 0.8 sec delay\n        }\n        this.waitingSearch = true;\n      }\n    },\n  },\n  methods: {\n    stateName(v) {\n      return this.states.filter(s => s.value === v)?.[0]?.text;\n    },\n    systemName(v) {\n      return this.systems.filter(s => s.value === v)?.[0]?.text;\n    },\n    reloadSearch() {\n      this.searchKeyword = ''\n      this.getUsers()\n    },\n    getUsers() {\n\n      this.loading = true\n      // const states = await UserApi.states();\n      const params = {...this.options, ...{size: this.options.itemsPerPage, searchKeyword: this.isFirstLoad ? this.options.searchKeyword : this.searchKeyword, searchRole: this.$route.params.searchRoleId, searchState: this.$route.params.searchState}}\n      UserApi.findAllByParam(params).then(data => {\n        this.totalItems = data.totalElements;\n        this.users = data.content;\n\n        this.users.forEach(u => {\n          // u.userStateName = states.filter(s => s.value = u.userState)?.[0]?.label;\n        });\n\n        this.$store.commit('setParams', {\n          ...params\n        })\n\n        if(this.isFirstLoad)\n          this.searchKeyword = this.options.searchKeyword\n        this.isFirstLoad = false\n        this.loading = false\n      })\n    }\n  },\n  created() {\n    let storedParams = this.$store.getters?.params??{};\n\n    // first load\n    if(!storedParams.name || storedParams.name !== this.$options.name) {\n      this.options = {\n        page:1,\n        itemsPerPage:10,\n        name:this.$options.name\n      }\n\n      storedParams = this.options\n      this.$store.commit('setParams', storedParams)\n\n    } else {\n      storedParams.name = this.$options.name\n      this.options = storedParams\n    }\n\n    // this.getUsers(_.cloneDeep(storedParams))\n\n    if(this.$route.params.searchRoleId === '2') {\n      this.breadcrumbs[0].text= '관리자 관리'\n      this.breadcrumbs[1].text= '관리자 목록'\n      this.pageName = '관리자'\n    } else if(this.$route.params.searchRoleId === '100') {\n      this.breadcrumbs[0].text= '일반 회원 관리'\n      this.breadcrumbs[1].text= '일반 회원 목록'\n      this.pageName = '일반 회원'\n    } else {\n      this.breadcrumbs[0].text= '회원 관리'\n      this.breadcrumbs[1].text= '회원 목록'\n      this.pageName = '회원'\n    }\n\n    if(this.$route.params.searchState && this.$route.params.searchState === 'STATE_WITHDRAW') {\n\n      this.breadcrumbs[0].text= '탈퇴 회원 관리'\n      this.breadcrumbs[1].text= '탈퇴 회원 목록'\n      this.pageName = '탈퇴 회원'\n    }\n    if(this.$route.params.searchState && this.$route.params.searchState === 'STATE_APPROVAL_REQUEST') {\n\n      this.breadcrumbs[0].text= '신청 회원 관리'\n      this.breadcrumbs[1].text= '신청 회원 목록'\n      this.pageName = '신청 회원'\n    }\n    storedParams.pageName = this.pageName\n\n    this.$store.commit('setParams', storedParams)\n\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.slide-fade-enter-active {\n  transition: all 0.3s ease;\n}\n.slide-fade-leave-active {\n  transition: all 0.3s cubic-bezier(1, 0.5, 0.8, 1);\n}\n.slide-fade-enter,\n.slide-fade-leave-to {\n  transform: translateX(10px);\n  opacity: 0;\n}\n</style>\n<style lang=\"scss\" scoped>\n.v-data-table {\n  ::v-deep table {\n    th {\n      text-transform: none !important;\n    }\n  }\n}\n</style>\n"]}]}