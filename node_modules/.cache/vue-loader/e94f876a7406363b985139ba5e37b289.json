{"remainingRequest":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/src/apps/article/Article.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/src/apps/article/Article.vue","mtime":1665531625448},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/cache-loader/dist/cjs.js","mtime":1665531750829},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/babel-loader/lib/index.js","mtime":1665531751248},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/cache-loader/dist/cjs.js","mtime":1665531750829},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/vue-loader/lib/index.js","mtime":1665531752006}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBBcnRpY2xlTGlzdCBmcm9tICIuL0xpc3QiOwppbXBvcnQgQXJ0aWNsZVBob3RvcyBmcm9tICIuL1Bob3RvIjsKLy8gaW1wb3J0IEFydGljbGVTY2hlZHVsZSBmcm9tICIuL1NjaGVkdWxlIjsKCmltcG9ydCBib2FyZEFwaSBmcm9tICdAL2FwaS9Cb2FyZEFwaScKCgpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsnYm9hcmRJZCddLAogIG5hbWU6ICJBcnRpY2xlIiwKICBjb21wb25lbnRzOiB7CiAgICAnYXJ0aWNsZS1saXN0JyA6IEFydGljbGVMaXN0LAogICAgJ2FydGljbGUtcGhvdG9zJyA6IEFydGljbGVQaG90b3MsCiAgICAvLyAnYXJ0aWNsZS1zY2hlZHVsZScgOiBBcnRpY2xlU2NoZWR1bGUKICB9LAogIGRhdGE6ICgpID0+ICh7CiAgICBicmVhZGNydW1iczogW3sKICAgICAgdGV4dDogJ+qyjOyLnOusvCDqtIDrpqwnLAogICAgICBkaXNhYmxlZDogZmFsc2UsCiAgICAgIGhyZWY6ICcjJwogICAgfSwgewogICAgICB0ZXh0OiAn6rKM7Iuc66y8IOuqqeuhnScKICAgIH1dLAogICAgaXNMaXN0OiBmYWxzZSwKICAgIGlzUGhvdG9zOiBmYWxzZSwKICAgIGlzU2NoZWR1bGU6IGZhbHNlLAogICAgYm9hcmQ6e30sCiAgICBwZXJtaXNzaW9uOiB7CiAgICAgIHdyaXRhYmxlOiBmYWxzZSwKICAgICAgcmVhZGFibGU6IGZhbHNlCiAgICB9CgogIH0pLAogIG1ldGhvZHM6IHsKICAgIGNoYW5nZUJvYXJkVHlwZSh2YWx1ZSkgewogICAgICB0aGlzLmlzTGlzdCA9ICdUWVBFX0dFTkVSQUwnID09PSB2YWx1ZQogICAgICB0aGlzLmlzUGhvdG9zID0gJ1RZUEVfUEhPVE8nID09PSB2YWx1ZQogICAgICB0aGlzLmlzU2NoZWR1bGUgPSAnVFlQRV9TQ0hFRFVMRScgPT09IHZhbHVlCiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiAoKSB7CgogICAgYm9hcmRBcGkuZmluZEJ5SWQodGhpcy5ib2FyZElkKS50aGVuKGFzeW5jIGRhdGEgPT4gewogICAgICB0aGlzLmJvYXJkID0gZGF0YTsKCiAgICAgIC8vIGNvbnN0IHN0b3JlZFBhcmFtcyA9IHRoaXMuJHN0b3JlLmdldHRlcnM/LnBhcmFtcz8/e307CiAgICAgIC8vIGNvbnN0IGJvYXJkVHlwZSA9IHN0b3JlZFBhcmFtcz8uYm9hcmRUeXBlPz90aGlzLmJvYXJkLmJvYXJkVHlwZTsKICAgICAgdGhpcy5pc0xpc3QgPSB0aGlzLmJvYXJkLmJvYXJkVHlwZSA9PT0gJ1RZUEVfR0VORVJBTCc7IC8vIFsnVFlQRV9HRU5FUkFMJywgJ1RZUEVfU0NIRURVTEUnXS5pbmNsdWRlcyh0aGlzLmJvYXJkLmJvYXJkVHlwZSk7CiAgICAgIHRoaXMuaXNQaG90b3MgPSB0aGlzLmJvYXJkLmJvYXJkVHlwZSA9PT0gJ1RZUEVfUEhPVE8nOwogICAgICB0aGlzLmlzU2NoZWR1bGUgPSB0aGlzLmJvYXJkLmJvYXJkVHlwZSA9PT0gJ1RZUEVfU0NIRURVTEUnOwoKICAgICAgdGhpcy5wZXJtaXNzaW9uID0gYXdhaXQgYm9hcmRBcGkuZmluZEFzc2lnbmVkUGVybWlzc2lvbklkKHRoaXMuYm9hcmRJZCkKICAgICAgLy8gY29uc29sZS5sb2codGhpcy5wZXJtaXNzaW9uKQogICAgICAvLyBjb25zdCBib2FyZFdyaXRlUGVybWlzc2lvblJvbGVJZHMgPSBbLi4ubmV3IFNldCh0aGlzLmJvYXJkLmJvYXJkUGVybWlzc2lvbnMubWFwKGJwID0+IGJwLmlkKS5maWx0ZXIocCA9PiBwLmZ1bmN0aW9uVHlwZSA9PT0gIldSSVRFIiB8fCBwLmZ1bmN0aW9uVHlwZSA9PT0gIkFETUlOIikubWFwKHAgPT4gcC5yb2xlSWQpKV0KICAgICAgLy8gY29uc3QgYm9hcmRSZWFkUGVybWlzc2lvblJvbGVJZHMgPSBbLi4ubmV3IFNldCh0aGlzLmJvYXJkLmJvYXJkUGVybWlzc2lvbnMubWFwKGJwID0+IGJwLmlkKS5maWx0ZXIocCA9PiBwLmZ1bmN0aW9uVHlwZSA9PT0gIlJFQUQiIHx8IHAuZnVuY3Rpb25UeXBlID09PSAiQURNSU4iKS5tYXAocCA9PiBwLnJvbGVJZCkpXQogICAgICAvLyB0aGlzLnBlcm1pc3Npb24ud3JpdGFibGUgPSBbLi4uYm9hcmRXcml0ZVBlcm1pc3Npb25Sb2xlSWRzXS5maW5kSW5kZXgociA9PiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VyLnJvbGVzLm1hcCh1ciA9PiBwYXJzZUludCh1cikpLmluY2x1ZGVzKHIpKSA+PSAwCiAgICAgIC8vIHRoaXMucGVybWlzc2lvbi5yZWFkYWJsZSA9IFsuLi5ib2FyZFJlYWRQZXJtaXNzaW9uUm9sZUlkc10uZmluZEluZGV4KHIgPT4gdGhpcy4kc3RvcmUuc3RhdGUudXNlci5yb2xlcy5tYXAodXIgPT4gcGFyc2VJbnQodXIpKS5pbmNsdWRlcyhyKSkgPj0gMAoKICAgIH0pOwoKICB9Cn0K"},{"version":3,"sources":["Article.vue"],"names":[],"mappings":";AA8BA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA","file":"Article.vue","sourceRoot":"src/apps/article","sourcesContent":["<template>\n  <div class=\"d-flex flex-column flex-grow-1\">\n    <div class=\"d-flex align-center py-3\">\n      <div>\n        <div class=\"display-1\">{{this.board.boardName}}</div>\n        <v-breadcrumbs :items=\"breadcrumbs\" class=\"pa-0 py-2\"></v-breadcrumbs>\n      </div>\n      <v-spacer></v-spacer>\n\n      <v-btn color=\"primary\" @click=\"$router.push({path: 'articles/form'})\" v-if=\"permission.writable\">\n        <v-icon left>mdi mdi-playlist-plus</v-icon>\n        게시물 추가\n      </v-btn>\n    </div>\n\n    <article-list v-if=\"isList && permission.readable\" @callback-change-list=\"changeBoardType\" :board=\"board\" :permission=\"permission\"/>\n    <article-photos v-if=\"isPhotos && permission.readable\" @callback-change-list=\"changeBoardType\" :boardId=\"boardId\" :permission=\"permission\"/>\n<!--    <article-schedule v-if=\"isSchedule\" @callback-change-list=\"changeBoardType\"/>-->\n\n    <div class=\"d-flex align-center py-3\">\n      <v-spacer></v-spacer>\n      <v-btn color=\"primary\" @click=\"$router.push({path: 'articles/form'})\"  v-if=\"permission.writable\">\n        <v-icon left>mdi mdi-playlist-plus</v-icon>\n        게시물 추가\n      </v-btn>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ArticleList from \"./List\";\nimport ArticlePhotos from \"./Photo\";\n// import ArticleSchedule from \"./Schedule\";\n\nimport boardApi from '@/api/BoardApi'\n\n\nexport default {\n  props: ['boardId'],\n  name: \"Article\",\n  components: {\n    'article-list' : ArticleList,\n    'article-photos' : ArticlePhotos,\n    // 'article-schedule' : ArticleSchedule\n  },\n  data: () => ({\n    breadcrumbs: [{\n      text: '게시물 관리',\n      disabled: false,\n      href: '#'\n    }, {\n      text: '게시물 목록'\n    }],\n    isList: false,\n    isPhotos: false,\n    isSchedule: false,\n    board:{},\n    permission: {\n      writable: false,\n      readable: false\n    }\n\n  }),\n  methods: {\n    changeBoardType(value) {\n      this.isList = 'TYPE_GENERAL' === value\n      this.isPhotos = 'TYPE_PHOTO' === value\n      this.isSchedule = 'TYPE_SCHEDULE' === value\n    }\n  },\n  created: function () {\n\n    boardApi.findById(this.boardId).then(async data => {\n      this.board = data;\n\n      // const storedParams = this.$store.getters?.params??{};\n      // const boardType = storedParams?.boardType??this.board.boardType;\n      this.isList = this.board.boardType === 'TYPE_GENERAL'; // ['TYPE_GENERAL', 'TYPE_SCHEDULE'].includes(this.board.boardType);\n      this.isPhotos = this.board.boardType === 'TYPE_PHOTO';\n      this.isSchedule = this.board.boardType === 'TYPE_SCHEDULE';\n\n      this.permission = await boardApi.findAssignedPermissionId(this.boardId)\n      // console.log(this.permission)\n      // const boardWritePermissionRoleIds = [...new Set(this.board.boardPermissions.map(bp => bp.id).filter(p => p.functionType === \"WRITE\" || p.functionType === \"ADMIN\").map(p => p.roleId))]\n      // const boardReadPermissionRoleIds = [...new Set(this.board.boardPermissions.map(bp => bp.id).filter(p => p.functionType === \"READ\" || p.functionType === \"ADMIN\").map(p => p.roleId))]\n      // this.permission.writable = [...boardWritePermissionRoleIds].findIndex(r => this.$store.state.user.roles.map(ur => parseInt(ur)).includes(r)) >= 0\n      // this.permission.readable = [...boardReadPermissionRoleIds].findIndex(r => this.$store.state.user.roles.map(ur => parseInt(ur)).includes(r)) >= 0\n\n    });\n\n  }\n}\n</script>\n"]}]}