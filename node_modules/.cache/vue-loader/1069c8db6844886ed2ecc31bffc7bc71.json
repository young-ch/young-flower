{"remainingRequest":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/src/apps/popup/Popup.vue?vue&type=style&index=0&id=5018f325&scoped=true&lang=css&","dependencies":[{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/src/apps/popup/Popup.vue","mtime":1665531625451},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/css-loader/dist/cjs.js","mtime":1665531751068},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1665531752098},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/postcss-loader/src/index.js","mtime":1665531751243},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/cache-loader/dist/cjs.js","mtime":1665531750829},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/vue-loader/lib/index.js","mtime":1665531752006}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5kYlRhYmxlIHRkewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBmb250LXNpemU6IDMwcHg7Cn0KLnBvcHVwQnV0dG9uewogIG1hcmdpbiA6YXV0bzsKICBtYXJnaW4tbGVmdDogMC4zcmVtICFpbXBvcnRhbnQ7CiAgbWFyZ2luLXJpZ2h0OiAwLjNyZW0gIWltcG9ydGFudDsKfQoucG9wdXBDYXRlZ29yeUJ0bnsKICBtYXJnaW4tbGVmdDotMS41cmVtOwp9Cg=="},{"version":3,"sources":["Popup.vue"],"names":[],"mappings":";AAgaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Popup.vue","sourceRoot":"src/apps/popup","sourcesContent":["<template>\n  <div class=\"d-flex flex-column flex-grow-1\">\n    <div class=\"d-flex align-center py-3\">\n      <div>\n        <div class=\"display-1\">팝업관리</div>\n        <v-breadcrumbs :items=\"breadcrumbs\" class=\"pa-0 py-2\"></v-breadcrumbs>\n      </div>\n      <v-spacer></v-spacer>\n      <v-btn color=\"primary\" @click=\"$router.push({path: `/popups/form`})\" style=\"margin-right:1rem\">\n        <v-icon left>mdi mdi-playlist-plus</v-icon>\n        팝업 추가\n      </v-btn>\n    </div>\n\n    <v-row>\n      <v-col md=\"3\">\n\n        <!-- category list -->\n        <v-card>\n          <v-card-title>카테고리</v-card-title>\n          <v-card-text>\n            <v-card-actions class=\"justify-end\">\n\n              <v-dialog\n                transition=\"dialog-top-transition\"\n                max-width=\"35rem\"\n              >\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn\n                    color=\"primary\"\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                    class=\"popupCategoryBtn\"\n                  ><v-icon left>mdi mdi-plus</v-icon>카테고리 추가</v-btn>\n                </template>\n\n                <template v-slot:default=\"dialog\">\n                  <v-card>\n                    <v-form ref=\"popupCategoryCreateForm\">\n                    <v-toolbar\n                      color=\"black\"\n                      dark\n                    >팝업 카테고리 등록</v-toolbar>\n                    <v-card-text>\n                      <v-text-field label=\"팝업카테고리\" v-model=\"popupCategory.categoryName\" :rules=\"[rules.common.required]\" maxlength=\"120\"/>\n                    </v-card-text>\n                    <v-card-actions class=\"justify-end\">\n                      <v-btn\n                        @click=\"saveCategory(popupCategory.categoryName, dialog);\"\n                        color=\"indigo\"\n                      ><v-icon left>mdi mdi-content-save</v-icon>추가</v-btn>\n                    </v-card-actions>\n                    </v-form>\n                  </v-card>\n\n                </template>\n              </v-dialog>\n\n            </v-card-actions>\n\n            <v-data-table\n              id=\"categoryTable\"\n              item-key=\"id\"\n              single-select\n              :hide-default-footer=\"true\"\n              disable-pagination\n              :headers=\"categoryHeader\"\n              :items=\"popupCategories\"\n              class=\"elevation-1\"\n              @click:row=\"(item, row) => {\n                row.select(!row.isSelected); search(row.isSelected ? null : item.id)\n              }\"\n              v-model=\"selectedCategory\"\n            >\n\n<!--              <template v-slot:item.createdAt=\"{ value }\">-->\n<!--                {{ value ? $moment(value).format('YYYY-MM-DD HH:mm:ss') : \"\" }}-->\n<!--              </template>-->\n              <template v-slot:item.isActivated=\"{ value }\">\n                {{ value ?'사용':'사용안함' }}\n              </template>\n              <template v-slot:item.actions=\"{ item }\">\n\n                <v-dialog\n                  transition=\"dialog-top-transition\"\n                  max-width=\"35rem\"\n                >\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      icon\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                    >\n                      <v-icon small>mdi-pencil</v-icon>\n                    </v-btn>\n                  </template>\n                  <template v-slot:default=\"dialog\">\n                    <v-card>\n                      <v-form ref=\"popupCategoryUpdateForm\">\n                      <v-toolbar>\n                        팝업 카테고리 수정\n                      </v-toolbar>\n                      <v-card-text>\n\n                        {{ item.categoryName }}\n\n                        <v-text-field\n                          v-model=\"item.categoryName\"\n                          :rules=\"[rules.common.required]\"\n                          maxlength=\"120\"\n                        />\n\n                      </v-card-text>\n                      <v-card-actions class=\"justify-end\">\n\n                        <v-btn\n                          @click=\"updateCategory(item, dialog)\"\n                          color=\"indigo\"\n                        ><v-icon left>mdi mdi-content-save</v-icon>\n                          수정\n                        </v-btn>\n                      </v-card-actions>\n                      </v-form>\n                    </v-card>\n                  </template>\n                </v-dialog>\n                <v-btn\n                  icon\n                  @click.stop=\"deleteCategory(item)\"\n                >\n                  <v-icon small>mdi-delete</v-icon>\n                </v-btn>\n              </template>\n            </v-data-table>\n\n          </v-card-text>\n        </v-card>\n      </v-col>\n\n      <v-col md=\"9\">\n        <!--popup List-->\n        <v-card>\n          <v-card-title>\n            <v-card-title>팝업 목록</v-card-title>\n\n            <v-spacer></v-spacer>\n\n            <v-text-field label=\"검색\"\n                          append-icon=\"mdi-magnify\"\n                          v-model=\"searchKeyword\"\n                          class=\"flex-grow-1 mr-md-2\"\n                          hide-details\n                          dense\n                          clearable\n                          single-line/>\n\n    <!--      <v-text-field-->\n    <!--        v-model=\"search\"-->\n    <!--        append-icon=\"mdi-magnify\"-->\n    <!--        label=\"Search\"-->\n    <!--        single-line-->\n    <!--        hide-details-->\n    <!--      ></v-text-field>-->\n\n          </v-card-title>\n          <v-card-text>\n              <v-data-table\n                v-model=\"selected\"\n                :headers=\"headers\"\n                :items=\"datasets\"\n                item-key=\"id\"\n                :single-select=\"singleSelect\"\n                :search=\"searchKeyword\"\n                :footer-props=\"{showFirstLastPage: true, 'items-per-page-options' : [10,20,50,100,-1], showCurrentPage:true}\"\n                :options.sync=\"options\"\n                class=\"elevation-1\"\n              >\n                  <template v-slot:item.title=\"{ value, item }\">\n                    <div><router-link :to=\"{path:`/popups/${item.id}/form`}\">{{ value }}</router-link></div>\n                  </template>\n                  <template v-slot:item.activated=\"{ item }\">\n                    {{ item.activated ?'사용':'사용안함' }}\n                  </template>\n                  <template v-slot:item.createdAt=\"{ value }\">\n                    <div>{{ value | formatDate('YYYY-MM-DD HH:mm:ss') }}</div>\n                  </template>\n                  <template v-slot:item.actions=\"{ item }\">\n                    <v-icon\n                      small\n                      class=\"mr-2\"\n                      @click.stop=\"updateForm(item)\"\n                    >\n                      mdi-pencil\n                    </v-icon>\n                    <v-icon\n                      small\n                      @click.stop=\"deletePopup(item)\"\n                    >\n                      mdi-delete\n                    </v-icon>\n                  </template>\n                  <template #footer.page-text=\"props\">\n\n                    <v-combobox\n                      v-model=\"options.page\"\n                      :label=\"`${props.pageStart}-${props.pageStop} of ${props.itemsLength} rows / ${options.page} page / total ${Math.ceil(props.itemsLength / options.itemsPerPage)} pages`\"\n                      :items=\"Array.from({length: Math.ceil(props.itemsLength / options.itemsPerPage)}, (v, k) => k+1 )\"\n                      :return-object=\"false\"\n                      hide-details dense\n                      type=\"number\"\n                      suffix=\"page\"\n                    >\n                    </v-combobox>\n                  </template>\n              </v-data-table>\n          </v-card-text>\n        </v-card>\n\n        <div class=\"d-flex align-center py-3\">\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" @click=\"$router.push({path: `/popup/form`})\" style=\"margin-right:1rem\">\n            <v-icon left>mdi mdi-playlist-plus</v-icon>\n            팝업 추가\n          </v-btn>\n        </div>\n      </v-col>\n    </v-row>\n\n  </div>\n</template>\n\n<script>\nimport PopupApi from '../../api/PopupApi';\nimport PopupCategoryApi from '../../api/PopupCategoryApi';\nimport rules from \"@/utils/rules\";\nimport _ from \"lodash\";\n\nexport default {\n  name:'popup',\n  components:{\n  },\n  data(){\n    return{\n      breadcrumbs: [\n        {\n          text: '팝업관리',\n          disabled: false,\n          href: '#'\n        },\n        {\n          text: '팝업목록'\n        }\n      ],\n      rules,\n      attachmentPath:process.env.VUE_APP_ATTACH_FILE_SERVER_URL,\n      searchKeyword:'',\n      headers: [\n        {text: '분류', value: 'categoryName', align: 'left'},\n        {text: '제목', value: 'title', align: 'left'},\n        {text: '사용여부', value: 'activated'},\n        {text: '등록일', value: 'createdAt'},\n        {\n          text: '관리',\n          value: 'actions',\n          sortable: false\n        }\n      ],\n      categoryHeader: [\n        {text: '카테고리 명', value: 'categoryName', align: 'left', sortable: true},\n        // {text: '생성일', value: 'createdAt', sortable: false},\n        // {text: '사용여부', value: 'isActivated', sortable: true},\n        {text: '관리', value: 'actions', sortable: false}\n      ],\n      options:{},\n      singleSelect: true,\n      selected: [],\n      datasets:[],\n      totalItems:null,\n      dialog : false,\n      popupCategory:{\n        categoryName:null,\n      },\n      popupCategories:[],\n      checkCategoryId:-1,\n      selectedCategory:[]\n    }\n  },\n  watch: {\n    options: {\n      handler() {\n        this.$store.commit('setParams', this.options);\n      },\n      deep: true,\n    },\n    selectedCategory: {\n      handler(nv) {\n        this.options.categoryId = nv?.[0]?.id??null;\n        this.$store.commit('setParams', this.options);\n      }\n    },\n    searchKeyword: {\n      handler(nv) {\n        this.options.searchKeyword = nv;\n        this.$store.commit('setParams', this.options);\n      }\n    }\n  },\n  methods: {\n    changeOrder(e) {\n      const {  page, itemsPerPage } = this.options;\n      const newOrder = this.datasets.length - (page-1)*itemsPerPage - e.moved.newIndex;\n\n      PopupApi.order(e.moved.element.id, newOrder).then(() => {\n        this.search();\n      });\n    },\n    search(categoryId, storedParams) {\n\n      PopupCategoryApi.findAll().then(result => {\n        this.popupCategories = result;\n\n        PopupApi.list(categoryId).then(data => {\n          this.datasets = data.map(b => {\n            b.categoryName = this.popupCategories.find(e => e.id === b.categoryId)?.categoryName??'-'\n            return b;\n          });\n\n          if(storedParams) {\n            this.options = storedParams\n            this.searchKeyword = this.options.searchKeyword ? this.options.searchKeyword : null\n          }\n        });\n      });\n\n    },\n\n    updateForm(item) {\n      this.$router.push({path:`/popups/${item.id}/form`});\n    },\n\n    deletePopup(item) {\n      if(confirm('삭제하시겠습니까?')) {\n        PopupApi.delete(item.id).then(() => {\n          this.search();\n        });\n      }\n    },\n\n    /* 카테고리 */\n    saveCategory(value, dialog) {\n      if (!this.$refs.popupCategoryCreateForm.validate()) {\n        return\n      }\n      this.popupCategory.categoryName = value;\n      PopupCategoryApi.save(this.popupCategory).then((result) => {\n        PopupCategoryApi.findAll().then(result => {\n          this.popupCategories = result;\n        });\n        this.popupCategory.categoryName = '';\n        this.$refs.popupCategoryCreateForm.resetValidation()\n      });\n\n      dialog.value = false\n    },\n\n    updateCategory(category, dialog) {\n      if (!this.$refs.popupCategoryUpdateForm.validate()) {\n        return\n      }\n\n      PopupCategoryApi.save(category).then(() => {\n        this.search();\n      });\n\n      dialog.value = false\n    },\n\n    deleteCategory(data) {\n      if (confirm('삭제 하시겠습니까?')) {\n        PopupCategoryApi.delete(data.id).then(() => {\n          this.search();\n        });\n      }\n    }\n\n  },\n  created() {\n\n    let storedParams = this.$store.getters?.params??{};\n\n    // first load\n    if(!storedParams.name || storedParams.name !== this.$options.name) {\n      this.options = {\n        page:1,\n        itemsPerPage:10,\n        categoryId:null,\n        name:this.$options.name\n      }\n\n      storedParams = this.options\n      this.$store.commit('setParams', storedParams)\n\n    } else {\n      storedParams.name = this.$options.name\n      this.options = storedParams\n    }\n\n    this.selectedCategory = this.options.categoryId ? [{id:this.options.categoryId}] : []\n    this.search(this.options.categoryId, _.cloneDeep(storedParams))\n\n  }\n\n};\n</script>\n\n<style scoped>\n.dbTable td{\n  text-align: center;\n  font-size: 30px;\n}\n.popupButton{\n  margin :auto;\n  margin-left: 0.3rem !important;\n  margin-right: 0.3rem !important;\n}\n.popupCategoryBtn{\n  margin-left:-1.5rem;\n}\n</style>\n"]}]}