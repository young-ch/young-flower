{"remainingRequest":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/babel-loader/lib/index.js!/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/src/apps/policy/PolicyForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/src/apps/policy/PolicyForm.vue","mtime":1665531625451},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/babel.config.js","mtime":1665531625438},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/cache-loader/dist/cjs.js","mtime":1665531750829},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/babel-loader/lib/index.js","mtime":1665531751248},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/cache-loader/dist/cjs.js","mtime":1665531750829},{"path":"/Users/youngchelchoi/Desktop/workspace/flower/flower-backoffice/node_modules/vue-loader/lib/index.js","mtime":1665531752006}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCBQb2xpY3lBcGkgZnJvbSAnLi4vLi4vYXBpL1BvbGljeUFwaSc7CmltcG9ydCBydWxlcyBmcm9tICJAL3V0aWxzL3J1bGVzIjsKaW1wb3J0IF8gZnJvbSAibG9kYXNoIjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHt9LAogIHByb3BzOiBbJ2lkJ10sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhYjogbnVsbCwKICAgICAgcnVsZXMsCiAgICAgIGJyZWFkY3J1bWJzOiBbewogICAgICAgIHRleHQ6ICfsoJXssYUg7KCV7J2YIOq0gOumrCcsCiAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLAogICAgICAgIGhyZWY6ICcjJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogdGhpcy4kcHJvcHMuaWQgPyAn7KCV7LGFIOygleydmCDsiJjsoJUnIDogJ+ygleyxhSDsoJXsnZgg65Ox66GdJwogICAgICB9XSwKICAgICAgcG9saWN5OiB7CiAgICAgICAgcG9saWN5TmFtZTogJycKICAgICAgfSwKICAgICAgY29waWVkUG9saWN5OiB7fQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIHNhdmVQb2xpY3koKSB7CiAgICAgIGlmICghKGF3YWl0IHRoaXMuJHJlZnMucG9saWN5Rm9ybS52YWxpZGF0ZSgpKSkgcmV0dXJuOwogICAgICBpZiAoY29uZmlybSgi7KCA7J6l7ZWY7Iuc6rKg7Iq164uI6rmMPyIpKSB7CiAgICAgICAgUG9saWN5QXBpLnNhdmUodGhpcy5wb2xpY3kpLnRoZW4ocmVzdWx0ID0+IHsKICAgICAgICAgIHRoaXMucG9saWN5LmlkID0gcmVzdWx0LmlkOwogICAgICAgICAgYWxlcnQoIuyggOyepeuQmOyXiOyKteuLiOuLpC4iKTsKICAgICAgICAgIC8vIHRoaXMuJHJvdXRlci5wdXNoKHtwYXRoOiAnL3BvbGljaWVzJ30pCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCgogICAgZ29Ub0xpc3QoKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBwYXRoOiAnL3BvbGljaWVzJwogICAgICB9KTsKICAgIH0sCiAgICByZXNldFBvbGljeSgpIHsKICAgICAgdGhpcy5wb2xpY3kgPSBfLmNsb25lRGVlcCh0aGlzLmNvcGllZFBvbGljeSk7CiAgICB9LAogICAgZGVsZXRlUG9saWN5KHBvbGljeSkgewogICAgICBpZiAoY29uZmlybSgn7IKt7KCc7ZWY7Iuc6rKg7Iq164uI6rmMPycpKSBQb2xpY3lBcGkuZGVsZXRlKHBvbGljeS5pZCkudGhlbigoKSA9PiB7CiAgICAgICAgdGhpcy5wb2xpY3kgPSB0aGlzLnBvbGljeS5maWx0ZXIociA9PiByICE9PSBwb2xpY3kpOwogICAgICAgIGFsZXJ0KCLsgq3soJzrkJjsl4jsirXri4jri6QuIik7CiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgcGF0aDogJy9wb2xpY2llcycKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgaWYgKHRoaXMuaWQpIHsKICAgICAgUG9saWN5QXBpLmZpbmRQb2xpY3lCeUlkKHRoaXMuaWQpLnRoZW4ocmVzdWx0ID0+IHsKICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXN1bHQpCiAgICAgICAgdGhpcy5wb2xpY3kgPSByZXN1bHQ7CiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5wb2xpY3kpCiAgICAgICAgdGhpcy5jb3BpZWRQb2xpY3kgPSBfLmNsb25lRGVlcCh0aGlzLnBvbGljeSk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";AA+FA;AAEA;AACA;AAEA;EACAA,aACA;EACAC;EACAC;IACA;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;MACA;QACAF;MACA;MACAG;QACAC;MACA;MACAC;IACA;EACA;EACAC;IACA;MACA,+CACA;MAEA;QAEAC;UACA;UACAC;UACA;QACA;MACA;IACA;;IACAC;MACA;QAAAC;MAAA;IACA;IACAC;MACA;IACA;IACAC;MACA,0BACAL;QACA;QACAC;QACA;UAAAE;QAAA;MACA;IACA;EAEA;EACAG;IACA;MACAN;QACA;QACA;QACA;QACA;MAEA;IACA;EACA;AAGA","names":["components","props","data","tab","rules","breadcrumbs","text","disabled","href","policy","policyName","copiedPolicy","methods","PolicyApi","alert","goToList","path","resetPolicy","deletePolicy","created"],"sourceRoot":"src/apps/policy","sources":["PolicyForm.vue"],"sourcesContent":["<template>\n  <div class=\"flex-grow-1\">\n    <div class=\"d-flex align-center py-3\">\n      <div>\n        <div class=\"display-1\">정책 정의 관리 {{ policy.policyName && `- ${policy.policyName}` }}</div>\n        <v-breadcrumbs :items=\"breadcrumbs\" class=\"pa-0 py-2\"></v-breadcrumbs>\n      </div>\n      <v-spacer></v-spacer>\n<!--      <v-btn @click=\"savePolicy\">{{ this.policy.policyId != null ? '수정' : '추가' }}</v-btn>-->\n      <v-btn color=\"red\" @click=\"deletePolicy\" v-if=\"id\" style=\"margin-right:1rem\" dark><v-icon left>mdi mdi-delete</v-icon>삭제</v-btn>\n      <v-btn @click=\"resetPolicy\"><v-icon left>mdi-refresh</v-icon>리셋</v-btn>\n      <v-btn @click=\"savePolicy\" color=\"indigo\" style=\"margin-left:1rem\" dark><v-icon left>mdi mdi-content-save</v-icon>저장</v-btn>\n      <v-btn @click=\"goToList\" style=\"margin-left:1rem\"><v-icon left>mdi mdi-format-list-bulleted</v-icon>목록</v-btn>\n\n<!--      <v-btn icon @click=\"resetPolicy\" style=\"margin-left:1rem\">-->\n\n    </div>\n\n    <v-card class=\"mb-4\">\n<!--      <v-card-policyName>기본 정보</v-card-policyName>-->\n\n      <v-card-text>\n\n        <v-form ref=\"policyForm\">\n          <v-col>\n            <span>\n                  <v-text-field\n                    v-model=\"policy.policyGroupCode\"\n                    label=\"정책 그룹 코드\"\n                    :rules=\"[rules.common.required, rules.common.digitCapAlphabet]\"\n                    inverted\n                    clearable\n                    dense\n                    maxlength=\"100\"\n                  ></v-text-field>\n              </span>\n          </v-col>\n\n          <v-col>\n            <span>\n                  <v-text-field\n                    v-model=\"policy.policyCode\"\n                    label=\"정책코드\"\n                    :rules=\"[rules.common.required, rules.common.digitCapAlphabet]\"\n                    inverted\n                    clearable\n                    dense\n                    maxlength=\"100\"\n                  ></v-text-field>\n              </span>\n          </v-col>\n\n          <v-col>\n            <span>\n                  <v-text-field\n                    v-model=\"policy.policyName\"\n                    label=\"정책명\"\n                    :rules=\"[rules.common.required]\"\n                    inverted\n                    clearable\n                    dense\n                    maxlength=\"100\"\n                  ></v-text-field>\n              </span>\n          </v-col>\n\n          <v-col>\n            <span class=\"font-weight-bold\">정책 설명</span>\n            <span>\n              <v-textarea\n                v-model=\"policy.policyDescription\"\n                flat\n                placeholder=\"정책 설명\"\n                hide-details\n              ></v-textarea>\n            </span>\n          </v-col>\n\n        </v-form>\n      </v-card-text>\n    </v-card>\n\n    <div class=\"d-flex\" style=\"margin-top:1rem\">\n      <v-spacer></v-spacer>\n      <v-btn color=\"red\" @click=\"deletePolicy\" v-if=\"id\" style=\"margin-right:1rem\" dark><v-icon left>mdi mdi-delete</v-icon>삭제</v-btn>\n      <v-btn @click=\"resetPolicy\"><v-icon left>mdi-refresh</v-icon>리셋</v-btn>\n      <v-btn color=\"indigo\" @click=\"savePolicy\" style=\"margin-left:1rem\" dark><v-icon left>mdi mdi-content-save</v-icon>저장</v-btn>\n      <v-btn @click=\"goToList\" style=\"margin-left:1rem\"><v-icon left>mdi mdi-format-list-bulleted</v-icon>목록</v-btn>\n    </div>\n\n  </div>\n</template>\n\n<script>\n\nimport PolicyApi from '../../api/PolicyApi'\n\nimport rules from \"@/utils/rules\";\nimport _ from \"lodash\";\n\nexport default {\n  components: {\n  },\n  props: ['id'],\n  data() {\n    return {\n      tab: null,\n      rules,\n      breadcrumbs: [{\n        text: '정책 정의 관리',\n        disabled: false,\n        href: '#'\n      }, {\n        text: this.$props.id ? '정책 정의 수정' : '정책 정의 등록'\n      }],\n      policy: {\n        policyName:''\n      },\n      copiedPolicy: {},\n    }\n  },\n  methods: {\n    async savePolicy() {\n      if (!await this.$refs.policyForm.validate())\n        return;\n\n      if (confirm(\"저장하시겠습니까?\")) {\n\n        PolicyApi.save(this.policy).then(result => {\n          this.policy.id = result.id\n          alert(\"저장되었습니다.\")\n          // this.$router.push({path: '/policies'})\n        })\n      }\n    },\n    goToList() {\n      this.$router.push({path: '/policies'})\n    },\n    resetPolicy() {\n      this.policy = _.cloneDeep(this.copiedPolicy)\n    },\n    deletePolicy(policy) {\n      if (confirm('삭제하시겠습니까?'))\n        PolicyApi.delete(policy.id).then(() => {\n          this.policy = this.policy.filter(r => r !== policy)\n          alert(\"삭제되었습니다.\")\n          this.$router.push({path: '/policies'})\n        })\n    }\n\n  },\n  created() {\n    if (this.id) {\n      PolicyApi.findPolicyById(this.id).then(result => {\n        // console.log(result)\n        this.policy = result;\n        // console.log(this.policy)\n        this.copiedPolicy = _.cloneDeep(this.policy)\n\n      })\n    }\n  }\n\n\n};\n</script>\n"]}]}